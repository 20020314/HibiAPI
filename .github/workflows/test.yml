name: Test

on:
  workflow_dispatch:

  push:
    branches: [main, dev]

  pull_request_target:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  cloc:
    runs-on: ubuntu-latest
    name: Count Lines of Code

    steps:
      - uses: actions/checkout@v2

      - name: Install CLoC
        run: |
          sudo apt-get update
          sudo apt-get install cloc

      - name: Count Lines of Code
        run: |
          cloc . --md >> $GITHUB_STEP_SUMMARY

  test:
    runs-on: ${{ matrix.os }}
    name: Testing

    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - python: pypy3.8
            os: ubuntu-latest
          - python: pypy3.9
            os: ubuntu-latest
      max-parallel: 3

    defaults:
      run:
        shell: bash

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: poetry

      - name: Install dependencies
        timeout-minutes: 5
        run: poetry install

      - name: Testing with pytest
        timeout-minutes: 15
        shell: bash
        run: |
          curl -L ${{ secrets.DOTENV_LINK }} > .env
          poetry run pytest -n auto \
            --dist loadfile \
            --cov ./hibiapi/ \
            --cov-report xml \
            --cov-report term-missing \
            ./test

      - name: Create step summary
        if: always()
        run: |
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          echo "OS: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          echo "Python: ${{ matrix.python }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          poetry run coverage report -m >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - uses: codecov/codecov-action@v3
        if: always()
        with:
          env_vars: OS,PYTHON
          file: coverage.xml
