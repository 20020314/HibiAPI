name: Test

on:
  workflow_dispatch:

  push:

  pull_request:
    branches:
      - master

jobs:
  count:
    runs-on: ubuntu-latest
    name: Count Code

    if: "!contains(github.event.head_commit.message,'forward:')"

    steps:
      - uses: actions/checkout@v2

      - name: Install CLoC
        run: |
          sudo apt-get install -y cloc

      - name: Count lines of code
        run: |
          cloc .

  docker:
    runs-on: ubuntu-latest
    name: Docker Build
    needs: [count]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Test Docker build
        run: |
          docker build .

  test:
    runs-on: ${{ matrix.os }}
    name: Testing
    needs: [count]

    strategy:
      matrix:
        python: [3.8, 3.9]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: true
      max-parallel: 3

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: Gr1N/setup-poetry@v4

      - name: Get poetry cache directory
        id: cache-poetry
        run: |
          echo "::set-output name=dir::$(poetry config cache-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.cache-poetry.outputs.dir }}
          key: ${{ runner.os }}-poetry-py${{ matrix.python }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Testing with pytest
        run: |
          curl -L ${{ secrets.DOTENV_LINK }} > configs/.env
          poetry run pytest test/

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: logs-${{ runner.os }}-${{ matrix.python }}
          path: data/logs
